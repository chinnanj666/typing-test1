@charset "utf-8";


/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is exclude, because otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(
    :not(html, iframe, canvas, img, svg, video, audio):not(
        svg *,
        symbol *
      )
  ) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: pointer;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  /* -webkit-user-select: auto; */
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}
body {
  font-family: 'JetBrains Mono', monospace;
  transition: background-color 0.3s, color 0.3s;
}

body.light {
  background-color: #ffffff;
  color: #000000;
  --icon-color: #000000; /* Dark color for light mode */
  --sun-color: #f9d71c; /* Bright yellow for the sun */
  --border-color: #000000; /* Dark border for light mode */
}

body.dark {
  background-color: #000000;
  color: #ffffff;
  --icon-color: #ffffff; /* Light color for dark mode */
  --sun-color: #f9d71c; /* Use the same color for consistency */
  --border-color: #ffffff; /* Light border for dark mode */
}

#theme-toggle {
  position: fixed;
  top: 17px;
  right: 14px;
  padding: 10px;
  background: none;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

#theme-toggle svg {
  width: 24px;
  height: 24px;
  transition: opacity 0.3s, transform 0.3s;
  stroke: var(--border-color); /* Set the stroke color */
  stroke-width: 2; /* Set the stroke width */
}

#theme-toggle .sun {
  opacity: 0;
  transform: rotate(90deg);
  fill: var(--sun-color);
  transition: fill 0.3s, opacity 0.3s, transform 0.3s;
}

body.light #theme-toggle .sun {
  opacity: 1;
  transform: rotate(0deg);
  filter: drop-shadow(0 0 5px #f9d71c); /* Add a glow effect */
}

body.light #theme-toggle .moon {
  opacity: 0;
  transform: rotate(90deg);
}

#theme-toggle .moon {
  fill: var(--icon-color);
  transition: fill 0.3s, opacity 0.3s, transform 0.3s;
}

body.dark #theme-toggle .moon {
  opacity: 1;
  transform: rotate(0deg);
}
/* Light Mode */
.footer {
  padding: 10px;
  position: absolute; /* Position footer at bottom */
  bottom: 0;
  width: 100%; /* Ensure full width on all devices */
}

.footer .content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.footer .left-content {
  flex: 1;
  text-align: left;
}

.footer .right-content {
  flex: 1;
  text-align: right;
}

.footer .copyright {
  color: inherit; /* Inherit color from parent element */
}

.footer a {
  text-decoration: none;
  color: inherit; /* Inherit color from parent element */
  margin: 0 10px;
}
.footer.light-mode .github img {
  /* Inherit styles from base rule */
  height: 20px;
  vertical-align: middle;
  /* Apply filter to lighten the icon in light mode */
  filter: brightness(1.2); /* Adjust brightness as needed */
}


/* Media Queries for Mobile Responsiveness */
@media only screen and (max-width: 768px) {
  .footer .left-content,
  .footer .right-content {
    font-size: 0.8rem;  /* Adjust font size for mobile */
    line-height: 1.5;  /* Adjust line height for mobile */
  }
}

/* Dark Mode - No separate background color definition needed */



